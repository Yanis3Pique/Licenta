@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Licenta_v1.Models.Delivery
@using Licenta_v1.Services

@{
    ViewBag.Title = "Delivery Details";
    // Iau urmatoarea Order din Delivery ce trebuie livrata(cea cu DeliverySequence cel mai mic printre Orders nelivrate)
    var nextOrderSequence = Model.Orders
                              .Where(o => o.Status != Licenta_v1.Services.OrderStatus.Delivered)
                              .OrderBy(o => o.DeliverySequence)
                              .Select(o => o.DeliverySequence)
                              .FirstOrDefault();
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-polylinedecorator/1.1.0/leaflet.polylineDecorator.min.js"></script>
<script src="~/js/map_show_delivery.js"></script>

<div class="container mt-5">
    <h2 class="text-center">@ViewBag.Title</h2>
    <br />

    <div class="row align-items-stretch">
        <div class="col-lg-8 col-md-10 mx-auto">
            <table class="table table-bordered table-striped">
                <tbody>
                    <tr>
                        <th id="light-blue-elements-background-id">Delivery ID</th>
                        <td id="light-blue-elements-background-id">@Model.Id</td>
                    </tr>
                    <tr>
                        <th id="light-blue-elements-background-id">Driver</th>
                        <td id="light-blue-elements-background-id">@(Model?.Driver?.UserName ?? "Not Assigned")</td>
                    </tr>
                    <tr>
                        <th id="light-blue-elements-background-id">Vehicle</th>
                        <td id="light-blue-elements-background-id">@Model.Vehicle?.Brand @Model.Vehicle?.Model (@Model.Vehicle?.RegistrationNumber) - @Model.Vehicle.FuelType</td>
                    </tr>
                    <tr>
                        <th id="light-blue-elements-background-id">Planned Start</th>
                        <td id="light-blue-elements-background-id">@Model.PlannedStartDate.ToString("d")</td>
                    </tr>
                    <tr>
                        <th id="light-blue-elements-background-id">Status</th>
                        <td id="light-blue-elements-background-id">@Model.Status</td>
                    </tr>
                    <tr>
                        <th id="light-blue-elements-background-id">Total Weight</th>
                        <td id="light-blue-elements-background-id">
                            &asymp; @(Math.Round(Model.Orders.Sum(o => o.Weight ?? 0), 2)) kg
                            (@(Math.Round((Model.Orders.Sum(o => o.Weight ?? 0) / (double)Model.Vehicle.MaxWeightCapacity) * 100, 2))% of capacity)
                        </td>
                    </tr>
                    <tr>
                        <th id="light-blue-elements-background-id">Total Volume</th>
                        <td id="light-blue-elements-background-id">
                            &asymp; @(Math.Round(Model.Orders.Sum(o => o.Volume ?? 0), 2)) m<sup>3</sup>
                            (@(Math.Round((Model.Orders.Sum(o => o.Volume ?? 0) / (double)Model.Vehicle.MaxVolumeCapacity) * 100, 2))% of capacity)
                        </td>
                    </tr>
                    @if (User.IsInRole("Admin") || User.IsInRole("Dispecer"))
                    {
                        <tr>
                            <th id="light-blue-elements-background-id-green-text">Estimated Distance</th>
                            <td id="light-blue-elements-background-id-green-text">
                                @(Model.DistanceEstimated != null ? Model.DistanceEstimated.Value.ToString("F2") : "N/A") km
                            </td>
                        </tr>
                        <tr>
                            <th id="light-blue-elements-background-id-green-text">Estimated Emissions</th>
                            <td id="light-blue-elements-background-id-green-text">
                                @{
                                    if (Model.Vehicle != null && Model.Vehicle.FuelType == FuelType.Electric)
                                    {
                                        @Html.Raw("0.00 kg CO<sub>2</sub>")
                                        ;
                                    }
                                    else if (Model.Vehicle != null && Model.Vehicle.FuelType == FuelType.Hybrid)
                                    {
                                        var emissionVal = (Model.EmissionsEstimated != null
                                        ? Model.EmissionsEstimated.Value.ToString("F2")
                                        : "N/A");
                                        @Html.Raw(emissionVal + " kg CO<sub>2</sub> (Hybrid)")
                                        ;
                                    }
                                    else
                                    {
                                        var emissionVal = (Model.EmissionsEstimated != null
                                        ? Model.EmissionsEstimated.Value.ToString("F2")
                                        : "N/A");
                                        @Html.Raw(emissionVal + " kg CO<sub>2</sub>")
                                        ;
                                    }
                                }
                            </td>
                        </tr>
                        <tr>
                            <th id="light-blue-elements-background-id-green-text">Estimated Fuel Consumption</th>
                            <td id="light-blue-elements-background-id-green-text">
                                @{
                                    if (Model.Vehicle != null && Model.Vehicle.FuelType == FuelType.Electric)
                                    {
                                        @Html.Raw("N/A")
                                        ;
                                    }
                                    else if (Model.Vehicle != null && Model.Vehicle.FuelType == FuelType.Hybrid)
                                    {
                                        var consumptionVal = (Model.ConsumptionEstimated != null
                                        ? Model.ConsumptionEstimated.Value.ToString("F2")
                                        : "N/A");
                                        @Html.Raw(consumptionVal + " L (Hybrid)")
                                        ;
                                    }
                                    else
                                    {
                                        var consumptionVal = (Model.ConsumptionEstimated != null
                                        ? Model.ConsumptionEstimated.Value.ToString("F2")
                                        : "N/A");
                                        @Html.Raw(consumptionVal + " L")
                                        ;
                                    }
                                }
                            </td>
                        </tr>
                        <tr>
                            <th id="light-blue-elements-background-id-green-text">Estimated Time</th>
                            <td id="light-blue-elements-background-id-green-text">
                                @{
                                    if (Model.TimeTakenForDelivery != null)
                                    {
                                        var totalHours = Model.TimeTakenForDelivery.Value;
                                        var hours = Math.Floor(totalHours);
                                        var minutes = Math.Round((totalHours - hours) * 60);
                                        string hoursText = hours + " hour" + (hours == 1 ? "" : "s");
                                        string minutesText = minutes + " minute" + (minutes == 1 ? "" : "s");

                                        if (hours == 0)
                                        {
                                            @: @minutesText
                                        }
                                        else
                                        {
                                            @: @hoursText @minutesText
                                        }
                                    }
                                    else
                                    {
                                        @:N/A
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <input type="hidden" id="ordersData" value='@Html.Raw(Json.Serialize(Model.Orders.Select(o => new { o.Latitude, o.Longitude, o.Address, o.Id })))' />
    <input type="hidden" id="deliveryId" value="@Model.Id" />

    <h4 class="text-center mt-4">Order Locations</h4>
    <div id="map-container" style="width: 100%; height: 400px;">
        <div id="map" style="width: 100%; height: 100%; border-radius: 10px;"></div>
    </div>

    @if (User.IsInRole("Sofer") || User.IsInRole("Dispecer"))
    {
        <!-- Distanta si Timp pe segment(fiecare Order + drum de intoarcere) -->
        <div id="routeDetails" class="mt-4">
            <h4 class="text-center">Distance & Time Estimated</h4>
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th id="light-blue-elements-background-id">Segment</th>
                        <th id="light-blue-elements-background-id">Distance</th>
                        <th id="light-blue-elements-background-id">Time</th>
                    </tr>
                </thead>
                <tbody id="routeSegments">
                    <!-- Datele vor fi populate din JavaScript -->
                </tbody>
            </table>
        </div>
    }
</div>

@if (User.IsInRole("Sofer") && Model.DriverId?.ToString() == ViewBag.CurrentUserId?.ToString())
{
    <div class="mt-4 p-4">
        <h4 class="text-center mb-3">📦 Orders in this Delivery</h4>

        <ul class="list-group order-list">
            @foreach (var order in Model.Orders.OrderBy(o => o.DeliverySequence))
            {
                <li class="list-group-item d-flex justify-content-between align-items-center order-item" id="light-blue-elements-background-id">
                    <span>
                        <strong>Order #@order.Id</strong> - @order.Address <br />
                        <strong>Client:</strong> @order.Client?.FirstName @order.Client?.LastName <br />
                        <strong>Phone:</strong> <a href="tel:@order.Client?.PhoneNumber">@order.Client?.PhoneNumber</a> <br />
                        <strong>Weight:</strong> &asymp; @order.Weight kg<br />
                        <strong>Volume:</strong> &asymp; @order.Volume m<sup>3</sup>
                    </span>

                    @if (order.Status == Licenta_v1.Services.OrderStatus.Delivered)
                    {
                        <span class="badge bg-success">✅ Delivered</span>
                    }
                    else if (Model.Status == "In Progress")
                    {
                        // Butoanele pot fi apasate doar in ordinea livrarilor Orders
                        bool isNextOrder = order.DeliverySequence == nextOrderSequence;
                        <form asp-action="MarkOrderDelivered" method="post" class="d-inline">
                            <input type="hidden" name="orderId" value="@order.Id" />
                            <button type="submit" class="btn btn-outline-primary btn-sm action-btn" @(isNextOrder ? "" : "disabled")>
                                Mark as Delivered
                            </button>
                        </form>
                    }
                </li>
            }
        </ul>

        <input type="hidden" id="deliveryStatus" value="@Model.Status">
        <div class="text-center mt-4">
            @if (Model.Status == "Planned")
            {
                <a asp-action="StartDelivery" asp-route-id="@Model.Id"
                   class="btn btn-success btn-lg fw-bold action-btn">
                    🚚 Start Delivery
                </a>
            }
            @if (Model.Status == "In Progress" && Model.Orders.All(o => o.Status == Licenta_v1.Services.OrderStatus.Delivered))
            {
                <a asp-action="CompleteDelivery" asp-route-id="@Model.Id"
                   class="btn btn-primary btn-lg fw-bold action-btn">
                    ✅ Complete Delivery
                </a>
            }
        </div>
    </div>
}
else if (User.IsInRole("Admin") || User.IsInRole("Dispecer"))
{
    <div class="mt-4 p-4">
        <ul class="list-group order-list">
            @foreach (var order in Model.Orders)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center order-item" id="light-blue-elements-background-id">
                    <span>
                        <strong>Order #@order.Id</strong> - @order.Address <br />
                        <strong>Client:</strong> @order.Client?.FirstName @order.Client?.LastName <br />
                        <strong>Phone:</strong> <a href="tel:@order.Client?.PhoneNumber">@order.Client?.PhoneNumber</a> <br />
                        <strong>Weight:</strong> &asymp; @order.Weight kg<br />
                        <strong>Volume:</strong> &asymp; @order.Volume m<sup>3</sup>
                    </span>

                    @if (order.Status == Licenta_v1.Services.OrderStatus.Delivered)
                    {
                        <span class="badge bg-success">✅ Delivered - @order.DeliveredDate</span>
                    }
                </li>
            }
        </ul>
    </div>
}