@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="d-flex align-items-center">
            <form class="form-inline me-3" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-danger" style="color: white">Logout</button>
            </form>
            @{
                var userId = UserManager.GetUserId(User);
                var user = await UserManager.FindByIdAsync(userId);
                var photoPath = user?.PhotoPath ?? "Images/Default.jpg";
            }
            <a class="nav-link p-0" asp-controller="Users" asp-action="Profile">
                <img src="@(Url.Content("~/" + photoPath))"
                     alt="User Photo"
                     class="rounded-circle"
                     style="width: 40px; height: 40px; object-fit: cover;">
            </a>
        </div>
    }
    else
    {
        <div class="d-flex align-items-center">
            <a class="btn btn-primary me-2" asp-area="Identity" asp-page="/Account/Register">Register</a>
            <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </div>
    }
</ul>
