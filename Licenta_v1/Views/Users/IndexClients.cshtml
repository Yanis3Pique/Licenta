@model IEnumerable<Licenta_v1.Models.ApplicationUser>
@{
    ViewBag.Title = "Clients";
}

<h2 class="text-center">@ViewBag.Title</h2>
<br />

<div class="card shadow-sm p-3 mb-4" id="light-blue-elements-background-id">
    <form method="get">
        <div class="row g-2 align-items-center">
            <!-- Bara de cautare -->
            <div class="col-md-4 col-sm-6">
                <input type="text" name="searchString" class="form-control" placeholder="Search users" value="@ViewBag.SearchString" />
            </div>

            <!-- Filtrare dupa regiuni -->
            <div class="col-md-3 col-sm-6">
                @Html.DropDownList("regionId",
                         ViewBag.Regions as SelectList,
                         "All Regions",
                         new { @class = "form-select" })
            </div>

            <!-- Sortare dupa nume sau vechime in firma -->
            <div class="col-md-3 col-sm-6">
                <form method="get">
                    <select class="form-select" name="sortOrder">
                        <option value="name" selected="@(ViewBag.CurrentSort == "name" ? "selected" : "")">Name (Ascending)</option>
                        <option value="name_desc" selected="@(ViewBag.CurrentSort == "name_desc" ? "selected" : "")">Name (Descending)</option>
                        <option value="date" selected="@(ViewBag.CurrentSort == "date" ? "selected" : "")">Date Hired (Ascending)</option>
                        <option value="date_desc" selected="@(ViewBag.CurrentSort == "date_desc" ? "selected" : "")">Date Hired (Descending)</option>
                        <option value="" selected="@(string.IsNullOrEmpty(ViewBag.CurrentSort) ? "selected" : "")">Sort by</option>
                    </select>
                </form>
            </div>

            <!-- Buton de submit pt tot -->
            <div class="col-md-2 col-sm-6">
                <button type="submit" class="btn btn-primary w-100">Apply</button>
            </div>
        </div>
    </form>
</div>

<!-- Carduri cu useri -->
<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var user in Model)
    {
        <div class="col">
            <div class="card h-100 text-center" style="min-height: 450px;" id="light-blue-elements-background-id">
                <div style="height: 300px; overflow: hidden;">
                    <img src="@(Url.Content("~/" + (user.PhotoPath ?? "Images/Default.jpg")))"
                         class="card-img-top img-fluid"
                         alt="User Photo"
                         style="height: 300px; width: 100%; object-fit: cover;">
                </div>

                <div class="card-body">
                    <h4 class="card-title">@Html.DisplayFor(modelItem => user.FirstName) @Html.DisplayFor(modelItem => user.LastName)</h4>
                    <p class="card-text">
                        <strong>User Name:</strong> @Html.DisplayFor(modelItem => user.UserName)<br />
                        <strong>Region:</strong> @(user.Region?.County ?? "N/A")<br />
                        <strong>Date Hired:</strong> @(user.DateHired.ToShortDateString() ?? "N/A")
                    </p>
                </div>

                <div class="card-footer">
                    <div class="d-flex justify-content-center">
                        @Html.ActionLink("Details", "Show", new { id = user.Id }, new { @class = "btn btn-primary btn-sm mb-2 mx-2" })
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<br />

<!-- Paginarea userilor -->
<nav>
    <ul class="pagination justify-content-center">
        @{
            int totalPages = ViewBag.TotalPages;
            int pageNumber = ViewBag.PageNumber;
            string query = $"&searchString={ViewBag.SearchString}&regionId={ViewBag.RegionId}&sortOrder={ViewBag.CurrentSort}";

            // Afisez o pagina la inceput, una la final si una la stanga si/sau dreapta celei curente
            int range = 1;
            int startPage = Math.Max(1, pageNumber - range);
            int endPage = Math.Min(totalPages, pageNumber + range);
        }

        <!-- Previous -->
        <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="?pageNumber=@(pageNumber - 1)@query" tabindex="-1">Previous</a>
        </li>

        <!-- Arat mereu prima pagina -->
        @if (startPage > 1)
        {
            <li class="page-item @(pageNumber == 1 ? "active" : "")">
                <a class="page-link" href="?pageNumber=1@query">1</a>
            </li>

            <!-- Pun ... daca e spatiu prea mare intre pagini -->
            @if (startPage > 2)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
            }
        }

        <!-- Arat range-ul pentru pagini -->
        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == pageNumber ? "active" : "")">
                <a class="page-link" href="?pageNumber=@i@query">@i</a>
            </li>
        }

        <!-- Arat mereu ultima pagina -->
        @if (endPage < totalPages)
        {
            <!-- Pun ... daca e spatiu prea mare intre pagini -->
            @if (endPage < totalPages - 1)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
            }

            <li class="page-item @(pageNumber == totalPages ? "active" : "")">
                <a class="page-link" href="?pageNumber=@totalPages@query">@totalPages</a>
            </li>
        }

        <!-- Next -->
        <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
            <a class="page-link" href="?pageNumber=@(pageNumber + 1)@query">Next</a>
        </li>
    </ul>
</nav>