@model IEnumerable<Licenta_v1.Models.ApplicationUser>
@{
    ViewBag.Title = "Drivers";
}

<h2 class="text-center">@ViewBag.Title</h2>

<!-- Cautare si filtrare custom -->
<form method="get" class="form-inline mb-3">
    <div class="form-group mr-2">
        @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control", placeholder = "Search users" })
    </div>
    <div class="form-group mr-2">
        @Html.DropDownList("regionId", ViewBag.Regions as SelectList, "All Regions", new { @class = "form-control" })
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>

<!-- Link-uri pentru sortare -->
<div class="mb-3">
    <p>
        Sort:
        @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParam, searchString = ViewBag.SearchString, regionId = ViewBag.RegionId, pageNumber = ViewBag.PageNumber }, new { @class = "text-decoration-none" })
        |
        @Html.ActionLink("Date Hired", "Index", new { sortOrder = ViewBag.DateSortParam, searchString = ViewBag.SearchString, regionId = ViewBag.RegionId, pageNumber = ViewBag.PageNumber }, new { @class = "text-decoration-none" })
    </p>
</div>

<!-- Carduri cu useri -->
<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var user in Model)
    {
        <div class="col">
            <div class="card h-100 text-center">
                <img src="@(Url.Content("~/" + user.PhotoPath))"
                     class="card-img-top img-fluid"
                     alt="User Photo"
                     style="height: auto; max-height: 300px; object-fit: cover;">


                <div class="card-body">
                    <h4 class="card-title">@Html.DisplayFor(modelItem => user.FirstName) @Html.DisplayFor(modelItem => user.LastName)</h4>
                    <p class="card-text">
                        <strong>User Name:</strong> @Html.DisplayFor(modelItem => user.UserName)<br />
                        <strong>Region:</strong> @(user.Region?.County ?? "N/A")<br />
                        <strong>Date Hired:</strong> @(user.DateHired.ToShortDateString() ?? "N/A")
                    </p>
                </div>

                <div class="card-footer">
                    <div class="d-flex justify-content-around">
                        @Html.ActionLink("Details", "Show", new { id = user.Id }, new { @class = "btn btn-info btn-sm" })
                        @Html.ActionLink("Edit", "Edit", new { id = user.Id }, new { @class = "btn btn-warning btn-sm" })
                        @using (Html.BeginForm("Delete", "Users", new { id = user.Id }, FormMethod.Post, false, new { onsubmit = "return confirm('Are you sure you want to delete this user?');" }))
                        {
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Paginarea userilor -->
<nav>
    <ul class="pagination justify-content-center">
        @{
            int totalPages = ViewBag.TotalPages;
            int pageNumber = ViewBag.PageNumber;
            string query = $"&searchString={ViewBag.SearchString}&regionId={ViewBag.RegionId}&sortOrder={ViewBag.CurrentSort}";
        }

        <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="?pageNumber=@(pageNumber - 1)@query">Previous</a>
        </li>

        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == pageNumber ? "active" : "")">
                <a class="page-link" href="?pageNumber=@i@query">@i</a>
            </li>
        }

        <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
            <a class="page-link" href="?pageNumber=@(pageNumber + 1)@query">Next</a>
        </li>
    </ul>
</nav>
