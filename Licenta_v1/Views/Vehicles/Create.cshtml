@using Licenta_v1.Services
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Licenta_v1.Models.Vehicle
@{
    ViewBag.Title = "Add Vehicle";
}

<h2 class="text-center mt-5">Add New Vehicle</h2>
<br />
<div class="container mt-5">
    <div class="row">
        <div class="col-6 offset-3">

            @using (Html.BeginForm(actionName: "Create", controllerName: "Vehicles", method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(m => m.Brand, "Brand")
                    @Html.TextBoxFor(m => m.Brand, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Brand, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.Model, "Model")
                    @Html.TextBoxFor(m => m.Model, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Model, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.RegistrationNumber, "Registration Number")
                    @Html.TextBoxFor(m => m.RegistrationNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RegistrationNumber, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.YearOfManufacture, "Year of Manufacture")
                    @Html.TextBoxFor(m => m.YearOfManufacture, new { @class = "form-control", type = "number", min = "1900", max = DateTime.Now.Year })
                    @Html.ValidationMessageFor(m => m.YearOfManufacture, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.Status, "Status")
                    @Html.DropDownListFor(m => m.Status,
                             new SelectList(Enum.GetValues(typeof(VehicleStatus))),
                             "Select Status",
                             new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.FuelType, "Fuel Type")
                    @Html.DropDownListFor(m => m.FuelType,
                             new SelectList(Enum.GetValues(typeof(FuelType))),
                             "Select Fuel Type",
                             new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FuelType, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.VehicleType, "Vehicle Type")
                    @Html.DropDownListFor(m => m.VehicleType,
                             ViewBag.VehicleTypes as IEnumerable<SelectListItem> ?? Enumerable.Empty<SelectListItem>(),
                             "Select Vehicle Type",
                             new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.VehicleType, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.MaxWeightCapacity, "Max Weight Capacity (kg)")
                    @Html.TextBoxFor(m => m.MaxWeightCapacity, new { @class = "form-control", type = "number", step = "0.01" })
                    @Html.ValidationMessageFor(m => m.MaxWeightCapacity, "", new { @class = "text-danger" })
                </div>
                <br />

				<div class="form-group">
                    @Html.LabelFor(m => m.MaxVolumeCapacity, "Max Volume Capacity (m³)")
					@Html.TextBoxFor(m => m.MaxVolumeCapacity, new { @class = "form-control", type = "number", step = "0.01" })
					@Html.ValidationMessageFor(m => m.MaxVolumeCapacity, "", new { @class = "text-danger" })
				</div>
				<br />

                <div class="form-group">
                    @Html.LabelFor(m => m.HeightMeters, "Height (meters)")
                    @Html.TextBoxFor(m => m.HeightMeters, new { @class = "form-control", type = "number", step = "0.01" })
                    @Html.ValidationMessageFor(m => m.HeightMeters, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.WidthMeters, "Width (meters)")
                    @Html.TextBoxFor(m => m.WidthMeters, new { @class = "form-control", type = "number", step = "0.01" })
                    @Html.ValidationMessageFor(m => m.WidthMeters, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.LengthMeters, "Length (meters)")
                    @Html.TextBoxFor(m => m.LengthMeters, new { @class = "form-control", type = "number", step = "0.01" })
                    @Html.ValidationMessageFor(m => m.LengthMeters, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.WeightTons, "Total Weight (tons)")
                    @Html.TextBoxFor(m => m.WeightTons, new { @class = "form-control", type = "number", step = "0.01" })
                    @Html.ValidationMessageFor(m => m.WeightTons, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.MaxAxleLoadTons, "Maximum Axle Load (tons)")
                    @Html.TextBoxFor(m => m.MaxAxleLoadTons, new { @class = "form-control", type = "number", step = "0.01" })
                    @Html.ValidationMessageFor(m => m.MaxAxleLoadTons, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.RegionId, "Region")
                    @Html.DropDownListFor(m => m.RegionId, new SelectList(ViewBag.Regions, "Value", "Text"), "Select Region", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RegionId, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.ConsumptionRate, "Fuel Consumption Rate (L/100km)/(kWh/100km)")
                    @Html.TextBoxFor(m => m.ConsumptionRate, new { @class = "form-control", type = "number", step = "0.01" })
                    @Html.ValidationMessageFor(m => m.ConsumptionRate, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.TotalDistanceTraveledKM, "Total Distance Traveled (km)")
                    @Html.TextBoxFor(m => m.TotalDistanceTraveledKM, new { @class = "form-control", type = "number", step = "1" })
                    @Html.ValidationMessageFor(m => m.TotalDistanceTraveledKM, "", new { @class = "text-danger" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(m => m.ImagePath, "Upload Vehicle Picture")
                    <input type="file" name="carPicture" class="form-control mb-2" />
                </div>
                <br />

                <button class="btn btn-success" type="submit">Add Vehicle</button>
            }
        </div>
    </div>
</div>
